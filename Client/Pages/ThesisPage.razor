@page "/thesis/{id:int?}"
@using Entities
@using Core
@inject HttpClient Http
@attribute [Authorize]

@if (Thesis != null) {
<div class="row justify-content-center">
    <div class="col-sm-10">
        <h1>@Thesis.Name</h1>
        <div class="top-box mt-5">
            <div class="row">
                <div class="col d-flex flex-column justify-content-space">
                    <h2 class="h3">Professor @Thesis.Teacher.Name</h2>
                    <h3 class="h5 fw-light" style="margin-bottom: 0; padding-top: 7px">cognition, iq, social pshycology
                    </h3>
                </div>
                <div class="col d-flex justify-content-end">
                    @if (status)
                    {
                        <div>
                            <button class="btn btn-lg bg-yellow" @onclick="Apply">Apply</button>
                        </div>
                    }
                    else
                    {
                        <div>
                            <button class="btn btn-lg bg-red" @onclick="Apply">Cancel</button>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="content content-grey mt-5">
            @((MarkupString)Thesis.Description)
        </div>
    </div>
</div>
} else if (Thesis == null && returned) {
    <div>
        <h1>Nothing found</h1>
    </div>
} else {
    <div>
        <h1>Loading...</h1>
    </div>
}
 
@code {

    @*
        * TODO: 1) Check current student has Isapplied for this thesis
        * TODO: 2) Make the student capable of applying, cancelling or accepting the status of the thesis for the student
    *@

    @* private Status status = null; *@
    private bool status = false;

    private bool returned;

    private ThesisDTO? Thesis;

    [Parameter]
    public int? Id { get; set; } = 0;

    private void Apply()
    {
        status = !status;
        @* status = status.Pending;
            var StudentId = 0;
            Http.PostAsync("/api/student/{StudentId}", (StudentId, Thesis.Id, status)); *@
    }


    protected override async Task OnInitializedAsync()
    {
        returned = false;
        Thesis = await Http.GetFromJsonAsync<ThesisDTO>("api/Thesis/" + Id);
        returned = true;
    }

}