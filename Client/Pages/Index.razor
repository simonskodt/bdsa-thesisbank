@page "/"
@using Entities
@using Core
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@* @inject Client.Service.IThesesService ThesesService *@
@inject HttpClient Http
@inject NavigationManager Navigation
@inject NavigationManager NavigationManager
@inject SignOutSessionStateManager SignOutManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage


@attribute [Authorize]


<div>
    
    <div class="row mb-5">
        <h1 class="mb-5">Find a thesis</h1>
        <NavLink href="/applications" class="top-btn bg-yellow shadow">
            Go to applied theses <i class="btn-i-right fas fa-chevron-right"></i>
        </NavLink>
    </div>
    <div class="row">
    @if(_theses != null) {
        @foreach (var thesis in _theses)
        {
            <ThesisComponent 
                Id="@thesis.Id"
                Title="@thesis.Name"
                Teacher="@thesis.TeacherName"
                Excerpt="@thesis.Excerpt"
            />
        }
    }
    </div>
</div>

@code {
    [CascadingParameter]
    Task<AuthenticationState> _authenticationStateTask { get; set; }

    ThesisDTOMinimal[]? _theses;

    protected override async Task OnInitializedAsync()
    {
        var authState = await _authenticationStateTask;
        var user = authState.User;
        
        var StudentID = await Http.GetFromJsonAsync<int?>($"api/Student/{user.Identity.Name}");

        if (StudentID != null) {
            await localStorage.SetItemAsync("user", StudentID);
        }

        var username = await localStorage.GetItemAsync<string>("user");
        
        var usernameInt = Int32.Parse(username);
            
        _theses = await Http.GetFromJsonAsync<ThesisDTOMinimal[]>("api/Theses/" + usernameInt);
    }
}
