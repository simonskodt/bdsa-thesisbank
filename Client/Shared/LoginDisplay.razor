
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Entities


@inject HttpClient Http
@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
@inject Blazored.LocalStorage.ILocalStorageService localStore

@attribute [Authorize]


<AuthorizeView>
    <Authorized>
        <div class="d-flex flex-direction-row align-items-center justify-content-end d-none d-lg-block text-right">
            <span class="roboto-500">Hello @context.User.Identity?.Name</span>
            <button class="btn btn-login shadow" @onclick="BeginLogout">Log out</button>
        </div>
        <div class="d-lg-none">
            <a href="" @onclick="BeginLogout">Log out</a>
        </div>
    </Authorized>
    <NotAuthorized>
        <a href="login">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code{

    private async Task BeginLogout(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private string _authMessage;
}